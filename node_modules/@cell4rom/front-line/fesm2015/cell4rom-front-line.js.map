{"version":3,"file":"cell4rom-front-line.js.map","sources":["ng://@cell4rom/front-line/lib/rs-pagination-lib.service.ts","ng://@cell4rom/front-line/lib/rs-pagination-lib.component.ts","ng://@cell4rom/front-line/lib/v2/rs-model.ts","ng://@cell4rom/front-line/lib/v2/rs-pagination.component.ts","ng://@cell4rom/front-line/lib/rs-pagination-lib.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n@Injectable({\n  providedIn: 'root'\n})\nexport class RsPaginationLibService {\n\n  constructor() { }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n/**\n * #### Pagination within API RSET\n * \n * Author : romdhanisamir94@gmail.com\n */\n@Component({\n  selector: 'rs-pagination-api',\n  template: `\n  <div *ngIf=\"pagesNumber >= 1\">\n\t<div class=\"row\">\n\t\t\t<div class=\"col-md-12\">\n\t\t\t\t<button class='btn btn-info btn-sm m-l-1em' (click)=\"firstPage()\" [disabled]=\"page === 1\"><i class=\"fa fa-angle-double-left\"></i></button>\n\t\t\t\t<button class='btn btn-info btn-sm m-l-1em' (click)=\"previousPage()\" [disabled]=\"page == 1\"><i class=\"fa fa-angle-left\"></i></button>\n\t\t\t\t<span style=\"margin-left: 10px;margin-right: 10px;\">Page {{page}}/{{pagesNumber}}</span> \n\t\t\t\t<span>  </span>\n        <span style=\"margin-left: 10px;margin-right: 10px;\">Size</span>\n\t\t\t\t<select class=\"form-control form-control-sm pageSizeSelectBox\" id=\"currentSize\" name=\"currentSize\" [(ngModel)]=\"currentSize\" (change)=\"changeSize()\">\n\t\t\t\t\t<option *ngFor=\"let size of sizes\" value=\"{{size}}\">{{size}}</option>\n        </select>\n\t\t\t\t<button class='btn btn-info btn-sm m-l-1em' (click)=\"nextPage()\" [disabled]=\"page === pagesNumber\"><i class=\"fa fa-angle-right\"></i></button>\n\t\t\t\t<button class='btn btn-info btn-sm m-l-1em' (click)=\"lastPage()\" [disabled]=\"page === pagesNumber\"><i class=\"fa fa-angle-double-right\"></i></button>\n\t\t\t</div>\n\t</div>\n</div>\n  `,\n  styles: [`\n  .m-l-1em { \n    margin-left:1em; \n    width: 25px;\n  }\n  \n  .pageSizeSelectBox {\n    display: -webkit-inline-box;\n    width: 11%;\n    padding: 5px; \n  }\n  \n  `]\n})\nexport class RsPaginationLibComponent implements OnInit {\n\n  @Input() page: number;\n  @Input() pagesNumber: number;\n  @Input() currentSize: number;\n\n  public sizes = [5, 10, 20]\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  \n  lastPage(): void {\n    this.router.navigate([], \n      {\n        relativeTo: this.activatedRoute,\n        queryParams: {page: this.pagesNumber}, \n        queryParamsHandling: \"merge\"\n      });\n  }\n\n  firstPage(): void {\n    this.router.navigate([], \n      {\n        relativeTo: this.activatedRoute,\n        queryParams: {page: 1}, \n        queryParamsHandling: \"merge\"\n      });\n  }\n\n  previousPage(): void {\n    this.router.navigate([], \n      {\n        relativeTo: this.activatedRoute,\n        queryParams: {page: --this.page}, \n        queryParamsHandling: \"merge\"\n      });\n  }\n\n  nextPage(): void {\n    this.router.navigate([], \n      {\n        relativeTo: this.activatedRoute,\n        queryParams: {page: ++this.page}, \n        queryParamsHandling: \"merge\"\n      });\n  }\n\n   changeSize(): void {\n    this.router.navigate([], \n      {\n        relativeTo: this.activatedRoute,\n        queryParams: {size: this.currentSize}, \n        queryParamsHandling: \"merge\"\n      });\n  }\n\n}\n","export function paginate(\n    totalItems: number,\n    currentPage: number = 1,\n    pageSize: number = 5,\n    maxPages: number = 10\n  ) {\n    // calculate total pages\n    let totalPages = Math.ceil(totalItems / pageSize);\n  \n    // ensure current page isn't out of range\n    if (currentPage < 1) { \n        currentPage = 1; \n    } else if (currentPage > totalPages) { \n        currentPage = totalPages; \n    }\n  \n    let startPage: number, endPage: number;\n    if (totalPages <= maxPages) {\n      // total pages less than max so show all pages\n      startPage = 1;\n      endPage = totalPages;\n    } else {\n      // total pages more than max so calculate start and end pages\n      let maxPagesBeforeCurrentPage = Math.floor(maxPages / 2);\n      let maxPagesAfterCurrentPage = Math.ceil(maxPages / 2) - 1;\n      if (currentPage <= maxPagesBeforeCurrentPage) {\n        // current page near the start\n        startPage = 1;\n        endPage = maxPages;\n      } else if (currentPage + maxPagesAfterCurrentPage >= totalPages) {\n        // current page near the end\n        startPage = totalPages - maxPages + 1;\n        endPage = totalPages;\n      } else {\n        // current page somewhere in the middle\n        startPage = currentPage - maxPagesBeforeCurrentPage;\n        endPage = currentPage + maxPagesAfterCurrentPage;\n      }\n    }\n  \n    // calculate start and end item indexes\n    let startIndex = (currentPage - 1) * pageSize;\n    let endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n  \n    // create an array of pages to ng-repeat in the pager control\n    let pages = Array.from(Array((endPage + 1) - startPage).keys()).map(i => startPage + i);\n  \n    // return object with all pager properties required by the view\n    return {\n      totalItems: totalItems,\n      currentPage: currentPage,\n      pageSize: pageSize,\n      totalPages: totalPages,\n      startPage: startPage,\n      endPage: endPage,\n      startIndex: startIndex,\n      endIndex: endIndex,\n      pages: pages\n    };\n  }","import { Component, OnInit, EventEmitter, Input, SimpleChanges, Output } from '@angular/core';\nimport { paginate } from './rs-model';\n\n/**\n * #### Pagination without API RSET\n * \n * Author : romdhanisamir94@gmail.com\n */\n@Component({\n  selector: 'rs-pagination',\n  template: `\n  <div>\n\t<div class=\"row\">\n\t\t\t<div class=\"col-md-12\">\n\t\t\t\t<button class='btn btn-info btn-sm m-l-1em' (click)=\"firstPage()\" [disabled]=\"currentPage === 1\"><i class=\"fa fa-angle-double-left\"></i></button>\n\t\t\t\t<button class='btn btn-info btn-sm m-l-1em' (click)=\"previousPage()\" [disabled]=\"currentPage == 1\"><i class=\"fa fa-angle-left\"></i></button>\n\t\t\t\t<span style=\"margin-left: 10px;margin-right: 10px;\">Page {{currentPage}}/{{pagesNumber}}</span> \n\t\t\t\t<span>  </span>\n        <span style=\"margin-left: 10px;margin-right: 10px;\">Size</span>\n        <select class=\"form-control form-control-sm pageSizeSelectBox\" id=\"currentSize\" \n                name=\"currentSize\" [(ngModel)]=\"currentSize\" (change)=\"changeSize(currentSize)\">\n\t\t\t\t\t<option *ngFor=\"let size of sizes\" value=\"{{size}}\">{{size}}</option>\n        </select>\n\t\t\t\t<button class='btn btn-info btn-sm m-l-1em' (click)=\"nextPage()\" [disabled]=\"currentPage === pagesNumber\"><i class=\"fa fa-angle-right\"></i></button>\n\t\t\t\t<button class='btn btn-info btn-sm m-l-1em' (click)=\"lastPage()\" [disabled]=\"currentPage === pagesNumber\"><i class=\"fa fa-angle-double-right\"></i></button>\n\t\t\t</div>\n\t</div>\n</div>\n  `,\n  styles: [`\n  .m-l-1em { \n    margin-left:1em; \n    width: 25px;\n  }\n  \n  .pageSizeSelectBox {\n    display: -webkit-inline-box;\n    width: 11%;\n    padding: 5px; \n  }\n  \n  `]\n})\nexport class RsPaginationComponent implements OnInit {\n\n  @Input() items: Array<any>;\n  @Input() currentSize : number;\n\n  currentPage: number = 1 ;\n  pagesNumber: number ;\n\n  public sizes = [5, 10, 20]\n  \n  @Output() changePage = new EventEmitter<any>(true);\n\n  constructor() { }\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if(this.items && this.items.length){\n      this.pagesNumber = Math.ceil(this.items.length / this.currentSize) ;\n      this.setPage(this.currentPage);\n    }\n  }\n\n\n  lastPage(): void {\n    this.currentPage = this.pagesNumber ; \n    this.setPage(this.currentPage);\n  }\n\n  firstPage(): void {\n    this.currentPage = 1 ; \n    this.setPage(this.currentPage);\n  }\n\n  previousPage(): void {\n    this.currentPage = this.currentPage - 1 ;\n    this.setPage(this.currentPage);\n  }\n\n  nextPage(): void {\n    this.currentPage = this.currentPage + 1 ;\n    this.setPage(this.currentPage);\n  }\n\n   changeSize(size: number): void {\n    this.setSize(size);\n  }\n\n\n  private setPage(page: number) {\n    let pager = paginate(this.items.length, page, this.currentSize);\n    this.currentPage = pager.currentPage ;\n    this.pagesNumber = pager.totalPages ;\n    var pageOfItems = this.items.slice(pager.startIndex, pager.endIndex + 1);\n    this.changePage.emit(pageOfItems);\n  }\n\n  private setSize(size: number) {\n    let pager = paginate(this.items.length, this.currentPage ,size);\n    this.currentPage = pager.currentPage ;\n    this.pagesNumber = pager.totalPages ;\n    var pageOfItems = this.items.slice(pager.startIndex, pager.endIndex + 1);\n    this.changePage.emit(pageOfItems);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RsPaginationLibComponent } from './rs-pagination-lib.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RsPaginationComponent } from './v2/rs-pagination.component';\n/**\n * Author : romdhanisamir94@gmail.com\n */\n@NgModule({\n  declarations: [\n    RsPaginationLibComponent,\n    RsPaginationComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [\n    RsPaginationLibComponent,\n    RsPaginationComponent\n  ]\n})\nexport class RsPaginationModule { }\n"],"names":[],"mappings":"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"}
