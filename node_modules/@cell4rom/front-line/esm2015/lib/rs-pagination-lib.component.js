/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
/**
 * #### Pagination within API RSET
 *
 * Author : romdhanisamir94\@gmail.com
 */
export class RsPaginationLibComponent {
    /**
     * @param {?} activatedRoute
     * @param {?} router
     */
    constructor(activatedRoute, router) {
        this.activatedRoute = activatedRoute;
        this.router = router;
        this.sizes = [5, 10, 20];
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    lastPage() {
        this.router.navigate([], {
            relativeTo: this.activatedRoute,
            queryParams: { page: this.pagesNumber },
            queryParamsHandling: "merge"
        });
    }
    /**
     * @return {?}
     */
    firstPage() {
        this.router.navigate([], {
            relativeTo: this.activatedRoute,
            queryParams: { page: 1 },
            queryParamsHandling: "merge"
        });
    }
    /**
     * @return {?}
     */
    previousPage() {
        this.router.navigate([], {
            relativeTo: this.activatedRoute,
            queryParams: { page: --this.page },
            queryParamsHandling: "merge"
        });
    }
    /**
     * @return {?}
     */
    nextPage() {
        this.router.navigate([], {
            relativeTo: this.activatedRoute,
            queryParams: { page: ++this.page },
            queryParamsHandling: "merge"
        });
    }
    /**
     * @return {?}
     */
    changeSize() {
        this.router.navigate([], {
            relativeTo: this.activatedRoute,
            queryParams: { size: this.currentSize },
            queryParamsHandling: "merge"
        });
    }
}
RsPaginationLibComponent.decorators = [
    { type: Component, args: [{
                selector: 'rs-pagination-api',
                template: `
  <div *ngIf="pagesNumber >= 1">
	<div class="row">
			<div class="col-md-12">
				<button class='btn btn-info btn-sm m-l-1em' (click)="firstPage()" [disabled]="page === 1"><i class="fa fa-angle-double-left"></i></button>
				<button class='btn btn-info btn-sm m-l-1em' (click)="previousPage()" [disabled]="page == 1"><i class="fa fa-angle-left"></i></button>
				<span style="margin-left: 10px;margin-right: 10px;">Page {{page}}/{{pagesNumber}}</span> 
				<span>  </span>
        <span style="margin-left: 10px;margin-right: 10px;">Size</span>
				<select class="form-control form-control-sm pageSizeSelectBox" id="currentSize" name="currentSize" [(ngModel)]="currentSize" (change)="changeSize()">
					<option *ngFor="let size of sizes" value="{{size}}">{{size}}</option>
        </select>
				<button class='btn btn-info btn-sm m-l-1em' (click)="nextPage()" [disabled]="page === pagesNumber"><i class="fa fa-angle-right"></i></button>
				<button class='btn btn-info btn-sm m-l-1em' (click)="lastPage()" [disabled]="page === pagesNumber"><i class="fa fa-angle-double-right"></i></button>
			</div>
	</div>
</div>
  `,
                styles: [`
  .m-l-1em { 
    margin-left:1em; 
    width: 25px;
  }
  
  .pageSizeSelectBox {
    display: -webkit-inline-box;
    width: 11%;
    padding: 5px; 
  }
  
  `]
            }] }
];
/** @nocollapse */
RsPaginationLibComponent.ctorParameters = () => [
    { type: ActivatedRoute },
    { type: Router }
];
RsPaginationLibComponent.propDecorators = {
    page: [{ type: Input }],
    pagesNumber: [{ type: Input }],
    currentSize: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    RsPaginationLibComponent.prototype.page;
    /** @type {?} */
    RsPaginationLibComponent.prototype.pagesNumber;
    /** @type {?} */
    RsPaginationLibComponent.prototype.currentSize;
    /** @type {?} */
    RsPaginationLibComponent.prototype.sizes;
    /** @type {?} */
    RsPaginationLibComponent.prototype.activatedRoute;
    /** @type {?} */
    RsPaginationLibComponent.prototype.router;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnMtcGFnaW5hdGlvbi1saWIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGNlbGw0cm9tL2Zyb250LWxpbmUvIiwic291cmNlcyI6WyJsaWIvcnMtcGFnaW5hdGlvbi1saWIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sRUFBRSxNQUFNLGlCQUFpQixDQUFDOzs7Ozs7QUF5Q3pELE1BQU07Ozs7O0lBUUosWUFDVSxnQkFDQTtRQURBLG1CQUFjLEdBQWQsY0FBYztRQUNkLFdBQU0sR0FBTixNQUFNO3FCQUpELENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUM7S0FLckI7Ozs7SUFFTCxRQUFRO0tBQ1A7Ozs7SUFHRCxRQUFRO1FBQ04sSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsRUFBRSxFQUNyQjtZQUNFLFVBQVUsRUFBRSxJQUFJLENBQUMsY0FBYztZQUMvQixXQUFXLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBQztZQUNyQyxtQkFBbUIsRUFBRSxPQUFPO1NBQzdCLENBQUMsQ0FBQztLQUNOOzs7O0lBRUQsU0FBUztRQUNQLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEVBQUUsRUFDckI7WUFDRSxVQUFVLEVBQUUsSUFBSSxDQUFDLGNBQWM7WUFDL0IsV0FBVyxFQUFFLEVBQUMsSUFBSSxFQUFFLENBQUMsRUFBQztZQUN0QixtQkFBbUIsRUFBRSxPQUFPO1NBQzdCLENBQUMsQ0FBQztLQUNOOzs7O0lBRUQsWUFBWTtRQUNWLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEVBQUUsRUFDckI7WUFDRSxVQUFVLEVBQUUsSUFBSSxDQUFDLGNBQWM7WUFDL0IsV0FBVyxFQUFFLEVBQUMsSUFBSSxFQUFFLEVBQUUsSUFBSSxDQUFDLElBQUksRUFBQztZQUNoQyxtQkFBbUIsRUFBRSxPQUFPO1NBQzdCLENBQUMsQ0FBQztLQUNOOzs7O0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEVBQUUsRUFDckI7WUFDRSxVQUFVLEVBQUUsSUFBSSxDQUFDLGNBQWM7WUFDL0IsV0FBVyxFQUFFLEVBQUMsSUFBSSxFQUFFLEVBQUUsSUFBSSxDQUFDLElBQUksRUFBQztZQUNoQyxtQkFBbUIsRUFBRSxPQUFPO1NBQzdCLENBQUMsQ0FBQztLQUNOOzs7O0lBRUEsVUFBVTtRQUNULElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEVBQUUsRUFDckI7WUFDRSxVQUFVLEVBQUUsSUFBSSxDQUFDLGNBQWM7WUFDL0IsV0FBVyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxXQUFXLEVBQUM7WUFDckMsbUJBQW1CLEVBQUUsT0FBTztTQUM3QixDQUFDLENBQUM7S0FDTjs7O1lBOUZGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsbUJBQW1CO2dCQUM3QixRQUFRLEVBQUU7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBaUJUO3lCQUNROzs7Ozs7Ozs7Ozs7R0FZUjthQUNGOzs7O1lBeENRLGNBQWM7WUFBRSxNQUFNOzs7bUJBMkM1QixLQUFLOzBCQUNMLEtBQUs7MEJBQ0wsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWN0aXZhdGVkUm91dGUsIFJvdXRlciB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5cbi8qKlxuICogIyMjIyBQYWdpbmF0aW9uIHdpdGhpbiBBUEkgUlNFVFxuICogXG4gKiBBdXRob3IgOiByb21kaGFuaXNhbWlyOTRAZ21haWwuY29tXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3JzLXBhZ2luYXRpb24tYXBpJyxcbiAgdGVtcGxhdGU6IGBcbiAgPGRpdiAqbmdJZj1cInBhZ2VzTnVtYmVyID49IDFcIj5cblx0PGRpdiBjbGFzcz1cInJvd1wiPlxuXHRcdFx0PGRpdiBjbGFzcz1cImNvbC1tZC0xMlwiPlxuXHRcdFx0XHQ8YnV0dG9uIGNsYXNzPSdidG4gYnRuLWluZm8gYnRuLXNtIG0tbC0xZW0nIChjbGljayk9XCJmaXJzdFBhZ2UoKVwiIFtkaXNhYmxlZF09XCJwYWdlID09PSAxXCI+PGkgY2xhc3M9XCJmYSBmYS1hbmdsZS1kb3VibGUtbGVmdFwiPjwvaT48L2J1dHRvbj5cblx0XHRcdFx0PGJ1dHRvbiBjbGFzcz0nYnRuIGJ0bi1pbmZvIGJ0bi1zbSBtLWwtMWVtJyAoY2xpY2spPVwicHJldmlvdXNQYWdlKClcIiBbZGlzYWJsZWRdPVwicGFnZSA9PSAxXCI+PGkgY2xhc3M9XCJmYSBmYS1hbmdsZS1sZWZ0XCI+PC9pPjwvYnV0dG9uPlxuXHRcdFx0XHQ8c3BhbiBzdHlsZT1cIm1hcmdpbi1sZWZ0OiAxMHB4O21hcmdpbi1yaWdodDogMTBweDtcIj5QYWdlIHt7cGFnZX19L3t7cGFnZXNOdW1iZXJ9fTwvc3Bhbj4gXG5cdFx0XHRcdDxzcGFuPiAgPC9zcGFuPlxuICAgICAgICA8c3BhbiBzdHlsZT1cIm1hcmdpbi1sZWZ0OiAxMHB4O21hcmdpbi1yaWdodDogMTBweDtcIj5TaXplPC9zcGFuPlxuXHRcdFx0XHQ8c2VsZWN0IGNsYXNzPVwiZm9ybS1jb250cm9sIGZvcm0tY29udHJvbC1zbSBwYWdlU2l6ZVNlbGVjdEJveFwiIGlkPVwiY3VycmVudFNpemVcIiBuYW1lPVwiY3VycmVudFNpemVcIiBbKG5nTW9kZWwpXT1cImN1cnJlbnRTaXplXCIgKGNoYW5nZSk9XCJjaGFuZ2VTaXplKClcIj5cblx0XHRcdFx0XHQ8b3B0aW9uICpuZ0Zvcj1cImxldCBzaXplIG9mIHNpemVzXCIgdmFsdWU9XCJ7e3NpemV9fVwiPnt7c2l6ZX19PC9vcHRpb24+XG4gICAgICAgIDwvc2VsZWN0PlxuXHRcdFx0XHQ8YnV0dG9uIGNsYXNzPSdidG4gYnRuLWluZm8gYnRuLXNtIG0tbC0xZW0nIChjbGljayk9XCJuZXh0UGFnZSgpXCIgW2Rpc2FibGVkXT1cInBhZ2UgPT09IHBhZ2VzTnVtYmVyXCI+PGkgY2xhc3M9XCJmYSBmYS1hbmdsZS1yaWdodFwiPjwvaT48L2J1dHRvbj5cblx0XHRcdFx0PGJ1dHRvbiBjbGFzcz0nYnRuIGJ0bi1pbmZvIGJ0bi1zbSBtLWwtMWVtJyAoY2xpY2spPVwibGFzdFBhZ2UoKVwiIFtkaXNhYmxlZF09XCJwYWdlID09PSBwYWdlc051bWJlclwiPjxpIGNsYXNzPVwiZmEgZmEtYW5nbGUtZG91YmxlLXJpZ2h0XCI+PC9pPjwvYnV0dG9uPlxuXHRcdFx0PC9kaXY+XG5cdDwvZGl2PlxuPC9kaXY+XG4gIGAsXG4gIHN0eWxlczogW2BcbiAgLm0tbC0xZW0geyBcbiAgICBtYXJnaW4tbGVmdDoxZW07IFxuICAgIHdpZHRoOiAyNXB4O1xuICB9XG4gIFxuICAucGFnZVNpemVTZWxlY3RCb3gge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtaW5saW5lLWJveDtcbiAgICB3aWR0aDogMTElO1xuICAgIHBhZGRpbmc6IDVweDsgXG4gIH1cbiAgXG4gIGBdXG59KVxuZXhwb3J0IGNsYXNzIFJzUGFnaW5hdGlvbkxpYkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgQElucHV0KCkgcGFnZTogbnVtYmVyO1xuICBASW5wdXQoKSBwYWdlc051bWJlcjogbnVtYmVyO1xuICBASW5wdXQoKSBjdXJyZW50U2l6ZTogbnVtYmVyO1xuXG4gIHB1YmxpYyBzaXplcyA9IFs1LCAxMCwgMjBdXG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBhY3RpdmF0ZWRSb3V0ZTogQWN0aXZhdGVkUm91dGUsXG4gICAgcHJpdmF0ZSByb3V0ZXI6IFJvdXRlclxuICApIHsgfVxuXG4gIG5nT25Jbml0KCkge1xuICB9XG5cbiAgXG4gIGxhc3RQYWdlKCk6IHZvaWQge1xuICAgIHRoaXMucm91dGVyLm5hdmlnYXRlKFtdLCBcbiAgICAgIHtcbiAgICAgICAgcmVsYXRpdmVUbzogdGhpcy5hY3RpdmF0ZWRSb3V0ZSxcbiAgICAgICAgcXVlcnlQYXJhbXM6IHtwYWdlOiB0aGlzLnBhZ2VzTnVtYmVyfSwgXG4gICAgICAgIHF1ZXJ5UGFyYW1zSGFuZGxpbmc6IFwibWVyZ2VcIlxuICAgICAgfSk7XG4gIH1cblxuICBmaXJzdFBhZ2UoKTogdm9pZCB7XG4gICAgdGhpcy5yb3V0ZXIubmF2aWdhdGUoW10sIFxuICAgICAge1xuICAgICAgICByZWxhdGl2ZVRvOiB0aGlzLmFjdGl2YXRlZFJvdXRlLFxuICAgICAgICBxdWVyeVBhcmFtczoge3BhZ2U6IDF9LCBcbiAgICAgICAgcXVlcnlQYXJhbXNIYW5kbGluZzogXCJtZXJnZVwiXG4gICAgICB9KTtcbiAgfVxuXG4gIHByZXZpb3VzUGFnZSgpOiB2b2lkIHtcbiAgICB0aGlzLnJvdXRlci5uYXZpZ2F0ZShbXSwgXG4gICAgICB7XG4gICAgICAgIHJlbGF0aXZlVG86IHRoaXMuYWN0aXZhdGVkUm91dGUsXG4gICAgICAgIHF1ZXJ5UGFyYW1zOiB7cGFnZTogLS10aGlzLnBhZ2V9LCBcbiAgICAgICAgcXVlcnlQYXJhbXNIYW5kbGluZzogXCJtZXJnZVwiXG4gICAgICB9KTtcbiAgfVxuXG4gIG5leHRQYWdlKCk6IHZvaWQge1xuICAgIHRoaXMucm91dGVyLm5hdmlnYXRlKFtdLCBcbiAgICAgIHtcbiAgICAgICAgcmVsYXRpdmVUbzogdGhpcy5hY3RpdmF0ZWRSb3V0ZSxcbiAgICAgICAgcXVlcnlQYXJhbXM6IHtwYWdlOiArK3RoaXMucGFnZX0sIFxuICAgICAgICBxdWVyeVBhcmFtc0hhbmRsaW5nOiBcIm1lcmdlXCJcbiAgICAgIH0pO1xuICB9XG5cbiAgIGNoYW5nZVNpemUoKTogdm9pZCB7XG4gICAgdGhpcy5yb3V0ZXIubmF2aWdhdGUoW10sIFxuICAgICAge1xuICAgICAgICByZWxhdGl2ZVRvOiB0aGlzLmFjdGl2YXRlZFJvdXRlLFxuICAgICAgICBxdWVyeVBhcmFtczoge3NpemU6IHRoaXMuY3VycmVudFNpemV9LCBcbiAgICAgICAgcXVlcnlQYXJhbXNIYW5kbGluZzogXCJtZXJnZVwiXG4gICAgICB9KTtcbiAgfVxuXG59XG4iXX0=